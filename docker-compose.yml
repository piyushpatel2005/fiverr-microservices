version: '3.9'
services:
  redis:
    container_name: redis_container
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --loglevel warning
    volumes: 
      - ./docker-volumes/cache:/data
  mongodb:
    container_name: mongodb_container
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./docker-volumes/data:/data/db
  mysql:
    container_name: mysql_container
    image: mysql:latest
    restart: always
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: fiverr_auth
      MYSQL_USER: fiverr
      MYSQL_PASSWORD: password
    volumes:
      - ./docker-volumes/mysql:/var/lib/mysql
  postgres:
    container_name: postgres_container
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: fiverr_reviews
      POTSGRES_USER: fiverr
      POSTGRES_PASSWORD: password
    volumes:
      - ./docker-volumes/postgres:/var/lib/postgresql
  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:3.13-management-alpine
    restart: always
    ports:
      - "5672:5672" # AMQP
      - "15672:15672" # Web UI management port
    # environment:
    #   RABBITMQ_DEFAULT_USER: fiverr
    #   RABBITMQ_DEFAULT_PASS: password
    volumes:
      - ./docker-volumes/rabbitmq:/var/lib/rabbitmq
  elasticsearch:
    container_name: elasticsearch_container
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.3
    restart: always
    ports:
      - "9200:9200" # ES REST API
      - "9300:9300" # ES transport
    environment:
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
      bootstrap.memory_lock: "true"
      discovery.type: single-node
      xpack.security.enabled: "false"
      xpack.security.authc.api_key.enabled: "true"
      xpack.monitoring.collection.enabled: "true"
      xpack.security.enrollment.enabled: "true"
    volumes:
      - ./docker-volumes/elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elastic
  kibana:
    container_name: kibana_container
    image: docker.elastic.co/kibana/kibana:8.15.3
    restart: always
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch_container:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch_container:9200
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml:ro
      - ./docker-volumes/kibana:/usr/share/kibana/data
    depends_on:
      - elasticsearch
    networks:
      - elastic
networks:
  elastic:
    name: elastic
    driver: bridge